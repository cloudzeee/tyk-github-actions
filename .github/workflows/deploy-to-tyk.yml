name: Deploy to Tyk

on:
  push:
    branches: [ main ]
    paths:
      - 'api-definitions/**'
      - 'policies/**'
      - '.github/workflows/deploy-to-tyk.yml'
  workflow_dispatch:

jobs:
  deploy-to-tyk:
    runs-on: self-hosted
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Check Tyk services
      run: |
        echo "Checking Tyk services..."
        
        if curl -f -s http://localhost:3000/hello > /dev/null 2>&1; then
          echo "✅ Tyk Dashboard is responding"
        else
          echo "❌ Tyk Dashboard not responding"
          exit 1
        fi
    
    - name: Debug API files
      run: |
        echo "=== DEBUG: Checking API definition files ==="
        
        for file in api-definitions/*.json; do
          if [ -f "$file" ]; then
            echo "File: $(basename $file)"
            echo "Original content:"
            cat "$file"
            echo ""
            echo "JSON validation:"
            python3 -m json.tool "$file" && echo "✅ Valid JSON" || echo "❌ Invalid JSON"
            echo "---"
          fi
        done
    
    - name: Deploy APIs with detailed debugging
      run: |
        echo "=== DEBUG: Starting API deployment ==="
        
        for file in api-definitions/*.json; do
          if [ -f "$file" ]; then
            api_name=$(basename "$file" .json)
            echo "Processing: $api_name"
            
            # Create temp file with org_id replacement
            temp_file=$(mktemp)
            
            if [ -n "${{ secrets.TYK_LOCAL_ORG_ID }}" ]; then
              echo "Replacing org_id with: ${{ secrets.TYK_LOCAL_ORG_ID }}"
              sed "s/REPLACE_WITH_YOUR_ORG_ID/${{ secrets.TYK_LOCAL_ORG_ID }}/g" "$file" > "$temp_file"
            else
              echo "No org_id replacement needed"
              cp "$file" "$temp_file"
            fi
            
            echo "Final JSON being sent to Tyk:"
            cat "$temp_file"
            echo ""
            echo "JSON validation of final content:"
            python3 -m json.tool "$temp_file" && echo "✅ Valid" || echo "❌ Invalid"
            echo ""
            
            # Deploy to Tyk
            echo "Sending POST request to Tyk..."
            response=$(curl -s -w "%{http_code}" -o /tmp/deploy_response.json \
              -X POST \
              -H "Authorization: ${{ secrets.TYK_LOCAL_API_KEY }}" \
              -H "Content-Type: application/json" \
              -d @"$temp_file" \
              "http://localhost:3000/api/apis")
            
            http_code=$(tail -n1 <<< "$response")
            
            echo "Response Code: $http_code"
            echo "Response Body:"
            cat /tmp/deploy_response.json
            echo ""
            
            if [[ $http_code == "200" || $http_code == "201" ]]; then
              echo "✅ Successfully deployed $api_name"
            else
              echo "❌ Failed to deploy $api_name"
              echo "Debugging info:"
              echo "- File: $file"
              echo "- Temp file: $temp_file"
              echo "- Org ID: ${{ secrets.TYK_LOCAL_ORG_ID }}"
              
              # Keep temp file for debugging
              cp "$temp_file" "/tmp/debug_${api_name}.json"
              echo "Debug file saved as: /tmp/debug_${api_name}.json"
            fi
            
            rm -f "$temp_file"
          fi
        done
